






现在我有一个需求，我想结构化输入多个执行程序的指令，通过多个进程同步执行

结构化信息：
    (
    name="program name", #进程名
    command=r"python.exe \t.py", #执行命令语句
    timeout=5, #最大执行时间
    realtime_callback=print_output, #实时获取的标准输出
    error_callback=print_error  #实时获取的错误输出
    )
进程执行程序，根据程序执行过程，分情况讨论：
    设定程序执行的最大运行时间
    1.在最大运行时间内运行结束的
        获取控制台输出stderr,stdout信息，以及程序运行时间，结束码
    2.程序未执行完毕，获取控制台输出stderr,stdout信息，通过线程定时传给判断函数，判断函数决定哪个程序（name）是否中止进程，如果中止，获取程序运行时间，结束码
    3.超出最大运行时间，直接关闭主动关闭进程，并获取期间控制台输出stderr,stdout信息，以及程序运行时间，结束码
    将搜集的信息结构化返回
    (name
    stderr
    stdout
    exec_time
    code)





――――――――――――――――――――――――――――――――――――――――――――――――――
重要补充：
    程序可以一直开着做服务，不影响别的？
――――――――――――――――――――――――
对接：
    执行程序模块能够接受多个程序输入类，同时执行程序，
    过程中定时捕获输出和报错，并提供过程反馈
    直到全部程序都结束后，提供结束反馈



目前具备：
    获取实时输出，报错
    获取累计输出，报错



测试内容包括：
    单个程序瞬间通过

    单个程序瞬间失败
    单个程序耗时通过
    单个程序耗时失败
    单个程序超时
    单个程序耗时被终止

    多个程序
        ...

与api的对接




过程：
    执行单个程序：
        过程控制，获取输出


程序执行
        执行
        中止
            中止程序
            中止进程



